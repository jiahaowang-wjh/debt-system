<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.smart.bracelet.dao.PubPersonDao">
  <resultMap id="BaseResultMap" type="com.smart.bracelet.model.po.PubPerson">
    <id column="person_id" jdbcType="BIGINT" property="personId" />
    <result column="company_id" jdbcType="BIGINT" property="companyId" />
    <result column="person_name" jdbcType="VARCHAR" property="personName" />
    <result column="person_type" jdbcType="VARCHAR" property="personType" />
    <result column="sex" jdbcType="VARCHAR" property="sex" />
    <result column="age" jdbcType="INTEGER" property="age" />
    <result column="tel" jdbcType="VARCHAR" property="tel" />
    <result column="note" jdbcType="VARCHAR" property="note" />
  </resultMap>
  <sql id="Base_Column_List">
    person_id, company_id, person_name, person_type, sex, age, tel, note
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from pub_person
    where person_id = #{personId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from pub_person
    where person_id = #{personId,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.smart.bracelet.model.po.PubPerson">
    insert into pub_person (person_id, company_id, person_name, 
      person_type, sex, age, 
      tel, note)
    values (#{personId,jdbcType=BIGINT}, #{companyId,jdbcType=BIGINT}, #{personName,jdbcType=VARCHAR}, 
      #{personType,jdbcType=VARCHAR}, #{sex,jdbcType=VARCHAR}, #{age,jdbcType=INTEGER}, 
      #{tel,jdbcType=VARCHAR}, #{note,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.smart.bracelet.model.po.PubPerson">
    insert into pub_person
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="personId != null">
        person_id,
      </if>
      <if test="companyId != null">
        company_id,
      </if>
      <if test="personName != null">
        person_name,
      </if>
      <if test="personType != null">
        person_type,
      </if>
      <if test="sex != null">
        sex,
      </if>
      <if test="age != null">
        age,
      </if>
      <if test="tel != null">
        tel,
      </if>
      <if test="note != null">
        note,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="personId != null">
        #{personId,jdbcType=BIGINT},
      </if>
      <if test="companyId != null">
        #{companyId,jdbcType=BIGINT},
      </if>
      <if test="personName != null">
        #{personName,jdbcType=VARCHAR},
      </if>
      <if test="personType != null">
        #{personType,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        #{sex,jdbcType=VARCHAR},
      </if>
      <if test="age != null">
        #{age,jdbcType=INTEGER},
      </if>
      <if test="tel != null">
        #{tel,jdbcType=VARCHAR},
      </if>
      <if test="note != null">
        #{note,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.smart.bracelet.model.po.PubPerson">
    update pub_person
    <set>
      <if test="companyId != null">
        company_id = #{companyId,jdbcType=BIGINT},
      </if>
      <if test="personName != null">
        person_name = #{personName,jdbcType=VARCHAR},
      </if>
      <if test="personType != null">
        person_type = #{personType,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        sex = #{sex,jdbcType=VARCHAR},
      </if>
      <if test="age != null">
        age = #{age,jdbcType=INTEGER},
      </if>
      <if test="tel != null">
        tel = #{tel,jdbcType=VARCHAR},
      </if>
      <if test="note != null">
        note = #{note,jdbcType=VARCHAR},
      </if>
    </set>
    where person_id = #{personId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.smart.bracelet.model.po.PubPerson">
    update pub_person
    set company_id = #{companyId,jdbcType=BIGINT},
      person_name = #{personName,jdbcType=VARCHAR},
      person_type = #{personType,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=VARCHAR},
      age = #{age,jdbcType=INTEGER},
      tel = #{tel,jdbcType=VARCHAR},
      note = #{note,jdbcType=VARCHAR}
    where person_id = #{personId,jdbcType=BIGINT}
  </update>
</mapper>