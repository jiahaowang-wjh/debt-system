<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.smart.bracelet.dao.debt.BusPropertPromiseDao">
  <resultMap id="BaseResultMap" type="com.smart.bracelet.model.po.debt.BusPropertPromise">
    <id column="promise_id" jdbcType="BIGINT" property="promiseId" />
    <result column="propert_id" jdbcType="BIGINT" property="propertId" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="sex" jdbcType="VARCHAR" property="sex" />
    <result column="birth" jdbcType="DATE" property="birth" />
    <result column="card" jdbcType="VARCHAR" property="card" />
    <result column="debt_person" jdbcType="VARCHAR" property="debtPerson" />
    <result column="loan_amount" jdbcType="REAL" property="loanAmount" />
    <result column="loan_interest" jdbcType="REAL" property="loanInterest" />
    <result column="loan_time" jdbcType="VARCHAR" property="loanTime" />
    <result column="execute_person" jdbcType="VARCHAR" property="executePerson" />
    <result column="execute_card" jdbcType="VARCHAR" property="executeCard" />
    <result column="execute_date" jdbcType="DATE" property="executeDate" />
    <result column="status" jdbcType="VARCHAR" property="status" />
  </resultMap>
  <sql id="Base_Column_List">
    promise_id, propert_id, `name`, sex, birth, card, debt_person, loan_amount, loan_interest, 
    loan_time, execute_person, execute_card, execute_date, `status`
  </sql>
  <select id="selectDaysCount" resultType="com.smart.bracelet.model.po.debt.DateAndDays">
    SELECT DATE_FORMAT(create_time,'%Y-%m-%d') days,COUNT(*) COUNT FROM bus_propert_promise GROUP BY days ORDER BY days DESC LIMIT 10;
    </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from bus_propert_promise
    where promise_id = #{promiseId,jdbcType=BIGINT}
  </select>
  <select id="queryList" resultType="com.smart.bracelet.model.po.debt.BusPropertPromise">
    select
    <include refid="Base_Column_List" />
    from bus_propert_promise
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from bus_propert_promise
    where promise_id = #{promiseId,jdbcType=BIGINT}
  </delete>

  <insert id="insertSelective" parameterType="com.smart.bracelet.model.po.debt.BusPropertPromise">
    insert into bus_propert_promise
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="promiseId != null">
        promise_id,
      </if>
      <if test="propertId != null">
        propert_id,
      </if>
      <if test="name != null">
        `name`,
      </if>
      <if test="sex != null">
        sex,
      </if>
      <if test="birth != null">
        birth,
      </if>
      <if test="card != null">
        card,
      </if>
      <if test="debtPerson != null">
        debt_person,
      </if>
      <if test="loanAmount != null">
        loan_amount,
      </if>
      <if test="loanInterest != null">
        loan_interest,
      </if>
      <if test="loanTime != null">
        loan_time,
      </if>
      <if test="executePerson != null">
        execute_person,
      </if>
      <if test="executeCard != null">
        execute_card,
      </if>
      <if test="executeDate != null">
        execute_date,
      </if>
      <if test="status != null">
        `status`,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="promiseId != null">
        #{promiseId,jdbcType=BIGINT},
      </if>
      <if test="propertId != null">
        #{propertId,jdbcType=BIGINT},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        #{sex,jdbcType=VARCHAR},
      </if>
      <if test="birth != null">
        #{birth,jdbcType=DATE},
      </if>
      <if test="card != null">
        #{card,jdbcType=VARCHAR},
      </if>
      <if test="debtPerson != null">
        #{debtPerson,jdbcType=VARCHAR},
      </if>
      <if test="loanAmount != null">
        #{loanAmount,jdbcType=REAL},
      </if>
      <if test="loanInterest != null">
        #{loanInterest,jdbcType=REAL},
      </if>
      <if test="loanTime != null">
        #{loanTime,jdbcType=VARCHAR},
      </if>
      <if test="executePerson != null">
        #{executePerson,jdbcType=VARCHAR},
      </if>
      <if test="executeCard != null">
        #{executeCard,jdbcType=VARCHAR},
      </if>
      <if test="executeDate != null">
        #{executeDate,jdbcType=DATE},
      </if>
      <if test="status != null">
        #{status,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.smart.bracelet.model.vo.debt.BusPropertPromiseVo">
    update bus_propert_promise
    <set>
      <if test="propertId != null">
        propert_id = #{propertId,jdbcType=BIGINT},
      </if>
      <if test="name != null">
        `name` = #{name,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        sex = #{sex,jdbcType=VARCHAR},
      </if>
      <if test="birth != null">
        birth = #{birth,jdbcType=DATE},
      </if>
      <if test="card != null">
        card = #{card,jdbcType=VARCHAR},
      </if>
      <if test="debtPerson != null">
        debt_person = #{debtPerson,jdbcType=VARCHAR},
      </if>
      <if test="loanAmount != null">
        loan_amount = #{loanAmount,jdbcType=REAL},
      </if>
      <if test="loanInterest != null">
        loan_interest = #{loanInterest,jdbcType=REAL},
      </if>
      <if test="loanTime != null">
        loan_time = #{loanTime,jdbcType=VARCHAR},
      </if>
      <if test="executePerson != null">
        execute_person = #{executePerson,jdbcType=VARCHAR},
      </if>
      <if test="executeCard != null">
        execute_card = #{executeCard,jdbcType=VARCHAR},
      </if>
      <if test="executeDate != null">
        execute_date = #{executeDate,jdbcType=DATE},
      </if>
      <if test="status != null">
        `status` = #{status,jdbcType=VARCHAR},
      </if>
    </set>
    where promise_id = #{promiseId,jdbcType=BIGINT}
  </update>
</mapper>