<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.smart.bracelet.dao.BusPayDetailDao">
  <resultMap id="BaseResultMap" type="com.smart.bracelet.model.po.BusPayDetail">
    <id column="pay_id" jdbcType="BIGINT" property="payId" />
    <result column="report_id" jdbcType="BIGINT" property="reportId" />
    <result column="contract_name" jdbcType="VARCHAR" property="contractName" />
    <result column="payert_name" jdbcType="VARCHAR" property="payertName" />
    <result column="voucher" jdbcType="VARCHAR" property="voucher" />
    <result column="cost" jdbcType="VARCHAR" property="cost" />
    <result column="flag" jdbcType="VARCHAR" property="flag" />
  </resultMap>
  <sql id="Base_Column_List">
    pay_id, report_id, contract_name, payert_name, voucher, cost, flag
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from bus_pay_detail
    where pay_id = #{payId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from bus_pay_detail
    where pay_id = #{payId,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.smart.bracelet.model.po.BusPayDetail">
    insert into bus_pay_detail (pay_id, report_id, contract_name, 
      payert_name, voucher, cost, 
      flag)
    values (#{payId,jdbcType=BIGINT}, #{reportId,jdbcType=BIGINT}, #{contractName,jdbcType=VARCHAR}, 
      #{payertName,jdbcType=VARCHAR}, #{voucher,jdbcType=VARCHAR}, #{cost,jdbcType=VARCHAR}, 
      #{flag,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.smart.bracelet.model.po.BusPayDetail">
    insert into bus_pay_detail
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="payId != null">
        pay_id,
      </if>
      <if test="reportId != null">
        report_id,
      </if>
      <if test="contractName != null">
        contract_name,
      </if>
      <if test="payertName != null">
        payert_name,
      </if>
      <if test="voucher != null">
        voucher,
      </if>
      <if test="cost != null">
        cost,
      </if>
      <if test="flag != null">
        flag,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="payId != null">
        #{payId,jdbcType=BIGINT},
      </if>
      <if test="reportId != null">
        #{reportId,jdbcType=BIGINT},
      </if>
      <if test="contractName != null">
        #{contractName,jdbcType=VARCHAR},
      </if>
      <if test="payertName != null">
        #{payertName,jdbcType=VARCHAR},
      </if>
      <if test="voucher != null">
        #{voucher,jdbcType=VARCHAR},
      </if>
      <if test="cost != null">
        #{cost,jdbcType=VARCHAR},
      </if>
      <if test="flag != null">
        #{flag,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.smart.bracelet.model.po.BusPayDetail">
    update bus_pay_detail
    <set>
      <if test="reportId != null">
        report_id = #{reportId,jdbcType=BIGINT},
      </if>
      <if test="contractName != null">
        contract_name = #{contractName,jdbcType=VARCHAR},
      </if>
      <if test="payertName != null">
        payert_name = #{payertName,jdbcType=VARCHAR},
      </if>
      <if test="voucher != null">
        voucher = #{voucher,jdbcType=VARCHAR},
      </if>
      <if test="cost != null">
        cost = #{cost,jdbcType=VARCHAR},
      </if>
      <if test="flag != null">
        flag = #{flag,jdbcType=VARCHAR},
      </if>
    </set>
    where pay_id = #{payId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.smart.bracelet.model.po.BusPayDetail">
    update bus_pay_detail
    set report_id = #{reportId,jdbcType=BIGINT},
      contract_name = #{contractName,jdbcType=VARCHAR},
      payert_name = #{payertName,jdbcType=VARCHAR},
      voucher = #{voucher,jdbcType=VARCHAR},
      cost = #{cost,jdbcType=VARCHAR},
      flag = #{flag,jdbcType=VARCHAR}
    where pay_id = #{payId,jdbcType=BIGINT}
  </update>
</mapper>