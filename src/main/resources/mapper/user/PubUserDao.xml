<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.smart.bracelet.dao.user.PubUserDao">
    <resultMap id="BaseResultMap" type="com.smart.bracelet.model.po.user.PubUser">
        <id column="user_id" jdbcType="BIGINT" property="userId"/>
        <result column="person_id" jdbcType="BIGINT" property="personId"/>
        <result column="role_id" jdbcType="BIGINT" property="roleId"/>
        <result column="login_name" jdbcType="VARCHAR" property="loginName"/>
        <result column="password_md5" jdbcType="VARCHAR" property="passwordMd5"/>
        <result column="isenable" jdbcType="VARCHAR" property="isenable"/>
        <result column="note" jdbcType="VARCHAR" property="note"/>
        <result column="user_name" jdbcType="VARCHAR" property="userName"/>
        <result column="user_avatar" jdbcType="VARCHAR" property="userAvatar"/>
    </resultMap>
    <sql id="Base_Column_List">
    user_id, person_id, role_id, login_name, password_md5, isenable, note,user_name,user_avatar
  </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from pub_user
        where user_id = #{userId,jdbcType=BIGINT}
    </select>
    <select id="selectUserInfoAccount" resultType="com.smart.bracelet.model.po.user.PubUser">
        select
        <include refid="Base_Column_List"/>
        from pub_user
        where login_name = #{loginName,jdbcType=VARCHAR}
    </select>
    <select id="selectUserAuth" resultType="java.lang.String">
    SELECT pa.`authname` FROM pub_user pu
    INNER JOIN pub_role pr ON pu.`role_id`=pr.`role_id`
    INNER JOIN pub_roleauth pro ON pro.`role_id`=pr.`role_id`
    INNER JOIN pub_auth pa ON pro.`auth_id`=pa.`auth_id`
    WHERE pu.`login_name` = #{loginName,jdbcType=VARCHAR}
  </select>
    <select id="queryUserList" resultType="com.smart.bracelet.model.po.user.PubUser">
        select
        <include refid="Base_Column_List"/>
        from pub_user
    </select>
    <select id="selectMenuByUserId" resultType="com.smart.bracelet.model.po.user.PubMenu">
     SELECT pm.`menu_id`,pm.`menuname`,pm.`menuurl`,pm.`menuorder`,pm.`prant_id`,pm.`isenable` FROM pub_user pu
     INNER JOIN pub_role pr ON pu.`role_id`=pr.`role_id`
     INNER JOIN pub_rolemenu pro ON pr.`role_id`=pro.`role_id`
     INNER JOIN pub_menu pm ON pro.`menu_id`=pm.`menu_id`
     WHERE pu.`user_id`=#{userId,jdbcType=BIGINT}
  </select>
    <select id="queryList" resultType="com.smart.bracelet.model.po.user.PersonOnUserOnCom">
        SELECT pp.note,pp.person_id,pp.person_name,pp.age,pp.person_type,pp.tel,pc.company_id,pc.company_name,pc.company_type,pp.sex
        from pub_person pp
        left JOIN pub_company pc ON pp.company_id = pc.company_id
    </select>
    <select id="selectUserComId" resultType="java.lang.Long">
        SELECT  pc.`company_id` FROM pub_user pu
        INNER JOIN pub_person pp ON pu.`person_id`=pp.`person_id`
        INNER JOIN pub_company pc ON pp.`company_id`=pc.`company_id`
        WHERE pu.`user_id` = #{userId,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from pub_user
    where user_id = #{userId,jdbcType=BIGINT}
  </delete>
    <!--批量删除用户-->
    <delete id="delUserList">
        delete from pub_user where user_id in
        <foreach item="item" collection="array" open="(" separator="," close=")">
            #{item}
        </foreach>
    </delete>
    <delete id="delListPerson">
        delete from pub_person where person_id in
        <foreach item="item" collection="array" open="(" separator="," close=")">
            #{item}
        </foreach>
    </delete>
    <insert id="insertSelective" parameterType="com.smart.bracelet.model.po.user.PubUser">
        insert into pub_user
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="userId != null and userId !='' ">
                user_id,
            </if>
            <if test="personId != null and personId !='' ">
                person_id,
            </if>
            <if test="roleId != null and roleId !='' ">
                role_id,
            </if>
            <if test="loginName != null and loginName !='' ">
                login_name,
            </if>
            <if test="passwordMd5 != null and passwordMd5 !='' ">
                password_md5,
            </if>
            <if test="isenable != null and isenable !='' ">
                isenable,
            </if>
            <if test="note != null and note !='' ">
                note,
            </if>
            <if test="userName != null and userName !='' ">
                user_name,
            </if>
            <if test="userAvatar != null and userAvatar !='' ">
                user_avatar,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="userId != null and userId !='' ">
                #{userId,jdbcType=BIGINT},
            </if>
            <if test="personId != null and personId !='' ">
                #{personId,jdbcType=BIGINT},
            </if>
            <if test="roleId != null and roleId !='' ">
                #{roleId,jdbcType=BIGINT},
            </if>
            <if test="loginName != null and loginName !='' ">
                #{loginName,jdbcType=VARCHAR},
            </if>
            <if test="passwordMd5 != null and passwordMd5 !='' ">
                #{passwordMd5,jdbcType=VARCHAR},
            </if>
            <if test="isenable != null and isenable !='' ">
                #{isenable,jdbcType=VARCHAR},
            </if>
            <if test="note != null and note !='' ">
                #{note,jdbcType=VARCHAR},
            </if>
            <if test="userName != null and userName !='' ">
                #{userName,jdbcType=VARCHAR},
            </if>
            <if test="userAvatar != null and userAvatar !='' ">
                #{userAvatar,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.smart.bracelet.model.vo.user.PubUserVo">
        update pub_user
        <set>
            <if test="personId != null and personId != ''">
                person_id = #{personId,jdbcType=BIGINT},
            </if>
            <if test="roleId != null and roleId != ''">
                role_id = #{roleId,jdbcType=BIGINT},
            </if>
            <if test="loginName != null and loginName != ''">
                login_name = #{loginName,jdbcType=VARCHAR},
            </if>
            <if test="passwordMd5 != null and passwordMd5 != ''">
                password_md5 = #{passwordMd5,jdbcType=VARCHAR},
            </if>
            <if test="isenable != null and isenable != ''">
                isenable = #{isenable,jdbcType=VARCHAR},
            </if>
            <if test="note != null and note != ''">
                note = #{note,jdbcType=VARCHAR},
            </if>
            <if test="userName != null and userName != ''">
                user_name = #{userName,jdbcType=VARCHAR},
            </if>
            <if test="userAvatar != null and userAvatar != ''">
                user_avatar = #{userAvatar,jdbcType=VARCHAR},
            </if>
            <if test="userId != null and userId != ''">
                user_id = #{userId,jdbcType=VARCHAR},
            </if>
        </set>
        where user_id = #{userId,jdbcType=BIGINT}
    </update>
    <update id="updateUserPwd">
         update pub_user set password_md5 = #{passWord,jdbcType=VARCHAR} where  user_id = #{personId,jdbcType=BIGINT}
    </update>
    <update id="updatePerson">
        update pub_person
        <set>
            <if test="companyId != null">
                company_id = #{companyId,jdbcType=BIGINT},
            </if>
            <if test="personName != null">
                person_name = #{personName,jdbcType=VARCHAR},
            </if>
            <if test="personType != null">
                person_type = #{personType,jdbcType=VARCHAR},
            </if>
            <if test="sex != null">
                sex = #{sex,jdbcType=VARCHAR},
            </if>
            <if test="age != null">
                age = #{age,jdbcType=INTEGER},
            </if>
            <if test="tel != null">
                tel = #{tel,jdbcType=VARCHAR},
            </if>
            <if test="note != null">
                note = #{note,jdbcType=VARCHAR},
            </if>
        </set>
        where person_id = #{personId,jdbcType=BIGINT}
    </update>
</mapper>